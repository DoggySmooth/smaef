					--- MET TEST ---



STEPS:

	1.CREATE A PLIM FILE WITH AN ANALISIS
	2.PASTE IT IN FOLDER "plims"
	3.execute python3 amrev.py "plimFile"
	4.ALL THE OUPUT IS AVAILABLE IN FOLDER "output/$(nameOfPlim)/"


Let's start with the plim writing.
PLIM file will be converted in XML and the XML will be checked if there is the correct syntax with the help of xsd. The XSD schema is in lib/schema/.

To pass the XSD validation, a plim schema is available under "doc".

	- templateWithCardinals

By looking at it, we know how to structure our plim file. The cardinals shows if a tag can be ommited or repeated.

NOTE: ITS IMPORTANT TO TAKE CARE FOR A CORRECT INDENTATION.

The first part are meta datas about the reverse

analysis
 res sha256://bsaifbiasoujb2345F3k1bj4F3223r
 met
  date 03041993
  access 03042012
  accessloc googleplay
  author Smooth
  email smooth
  permission shared
  tags trojan,exploit,root
 met
  date 05091994
  access 01081998
  accessloc googleplay
  author Boo
  email boos
  permission shared
  tags trojan

As usual. That kind of information can be easily extracted from most reverse engineer tools for android app and put there for informative purpose.


NOW LETS MOVE ON WITH THE MAIN ANALISIS

 data
  art
   loc com.adsdk.adwo/H
   type attribute
   name d
   level benign
   descr It's a WebView that overlays the main screen displaying malicious adds
   tag Heavy
  art
   loc com.adsdk.adwo/x
   type method
   name toString(var X)
   level malicious
   descr Converts an String into an encrypted base64 String
  art
   loc com.sdk/L
   type URL
   name bhkjnl.commandandcontrol.cn
   level malicious
   descr URL of the command and control server used by the malicious app
  art
   loc com.sdk/L
   type URL
   name bhkjnl.commandandafsd.afs
   level malicious
   descr URL of the command and control server used by the malicious app
~                                                                         
This plim file is self explanatory.

So we finished step 1.

Lets move our file in "plims" directory and run "run.py 'plimFile'" 
We can now see in our output directory all the generated files.

run 
 - see *.html
 - see Graph.vg.svg

Thanks!

